{"ast":null,"code":"import _slicedToArray from \"/home/adrian/Escritorio/abzFront/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/adrian/Escritorio/abzFront/src/App.tsx\";\nimport JqxButton from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons\";\nimport JqxGrid, { jqx } from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid\";\nimport React, { useState } from \"react\";\nimport { generateData } from \"./generatedata\";\nimport JqxTabs from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtabs';\nimport './App.css';\n\nconst MyGrid = () => {\n  const myGrid = React.createRef();\n  const source = {\n    datafields: [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'productname',\n      type: 'string'\n    }],\n    datatype: 'array',\n    localdata: generateData(100)\n  };\n  const source2 = {\n    datafields: [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'productname',\n      type: 'string'\n    }],\n    url: 'http://127.0.0.1:3333/leer',\n    datatype: 'json'\n  };\n  const adapter = new jqx.dataAdapter(source);\n  const adapter2 = new jqx.dataAdapter(source2);\n\n  const exportar = () => {\n    myGrid.current.exportdata('xls', 'archivo');\n  };\n\n  const subir = () => {\n    setAdap(adapter2);\n  };\n\n  const _useState = useState(adapter),\n        _useState2 = _slicedToArray(_useState, 2),\n        adap = _useState2[0],\n        setAdap = _useState2[1];\n\n  const cargar = async event => {\n    const newData = new FormData();\n    const data = event.target.files[0];\n    newData.append(\"excel\", data); //console.log(data)\n\n    const resp = await fetch('http://127.0.0.1:3333/upload', {\n      method: \"POST\",\n      body: newData\n    }).then(resp => resp.json()); //console.log(resp)\n    //alert(JSON.stringify(resp))\n\n    if (resp) {\n      alert(\"subido\");\n      setAdap(adapter2);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(JqxTabs, {\n    width: 610,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: {\n      marginLeft: '30px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Grid 1\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Grid 2\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(JqxGrid, {\n    ref: myGrid,\n    sortable: true,\n    filterable: true,\n    pageable: true,\n    showfilterrow: true,\n    source: adap,\n    selectionmode: 'multiplecellsadvanced',\n    editable: true,\n    columns: [{\n      text: \"name\",\n      datafield: \"name\",\n      width: \"290\"\n    }, {\n      text: \"productname\",\n      datafield: \"productname\",\n      width: \"290\",\n      columntype: 'dropdownlist'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(JqxGrid, {\n    source: [{\n      productname: 'jajaja'\n    }],\n    columns: [{\n      text: \"productname\",\n      datafield: \"productname\",\n      width: \"290\",\n      columntype: 'dropdownlist'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"centerDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(JqxButton, {\n    style: {\n      marginTop: '5px'\n    },\n    onClick: exportar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Export to Excel\"), React.createElement(JqxButton, {\n    style: {\n      marginTop: '5px'\n    },\n    onClick: subir,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Subir\"), React.createElement(JqxButton, {\n    style: {\n      marginTop: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: cargar,\n    name: \"excel\",\n    type: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))));\n};\n\nexport default MyGrid;","map":{"version":3,"sources":["/home/adrian/Escritorio/abzFront/src/App.tsx"],"names":["JqxButton","JqxGrid","jqx","React","useState","generateData","JqxTabs","MyGrid","myGrid","createRef","source","datafields","name","type","datatype","localdata","source2","url","adapter","dataAdapter","adapter2","exportar","current","exportdata","subir","setAdap","adap","cargar","event","newData","FormData","data","target","files","append","resp","fetch","method","body","then","json","alert","marginLeft","text","datafield","width","columntype","productname","marginTop"],"mappings":"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","sourcesContent":["import JqxButton from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons\";\nimport JqxGrid, { jqx } from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid\";\nimport React, { useState } from \"react\";\nimport { generateData } from \"./generatedata\";\n\nimport JqxTabs from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtabs';\n\n\n\nimport './App.css';\nconst MyGrid = () => {\n\n    const myGrid = React.createRef<JqxGrid>();\n    \n\n    const source = {\n        datafields: [\n            { name: 'name', type: 'string' },\n            { name: 'productname', type: 'string' },\n        ],\n        datatype: 'array',\n        localdata: generateData(100)\n\n    };\n\n    const source2 = {\n        datafields: [\n            { name: 'name', type: 'string' },\n            { name: 'productname', type: 'string' },\n        ],\n        url: 'http://127.0.0.1:3333/leer',\n        datatype: 'json'\n    }\n\n    const adapter = new jqx.dataAdapter(source);\n    const adapter2 = new jqx.dataAdapter(source2);\n\n    \n\n    const exportar = () => {\n        myGrid.current!.exportdata('xls', 'archivo')\n    }\n\n    const subir = () => {\n\n        setAdap(adapter2)\n    }\n\n    const [adap, setAdap] = useState(adapter)\n\n    const cargar = async (event) => {\n        const newData = new FormData();\n        const data = event.target.files[0]\n        newData.append(\"excel\", data)\n        //console.log(data)\n        const resp = await fetch('http://127.0.0.1:3333/upload', {\n            method: \"POST\",\n            body: newData\n        }).then(resp => resp.json())\n        //console.log(resp)\n        //alert(JSON.stringify(resp))\n\n        if (resp) {\n            alert(\"subido\")\n            setAdap(adapter2)\n        }\n    }\n\n\n    return (\n        <div className=\"center\">\n\n            <JqxTabs width={610}>\n\n                <ul>\n                    <li style={{ marginLeft: '30px' }}>Grid 1</li>\n                    <li>Grid 2</li>\n                </ul>\n\n                <div>\n                    <JqxGrid ref={myGrid}\n\n                        sortable={true}\n                        filterable={true}\n                        pageable={true}\n                        showfilterrow={true}\n                        source={adap}\n                        selectionmode={'multiplecellsadvanced'}\n                        editable={true}\n                        columns={[{\n                            text: \"name\",\n                            datafield: \"name\",\n                            width: \"290\",\n\n                        },\n                        {\n                            text: \"productname\",\n                            datafield: \"productname\",\n                            width: \"290\",\n                            columntype: 'dropdownlist'\n                        }]}\n\n\n                    >\n                    </JqxGrid>\n                </div>\n                <div>\n                    <JqxGrid\n                        source={[{productname:'jajaja'}]}\n                        columns={[{\n                            text: \"productname\",\n                            datafield: \"productname\",\n                            width: \"290\",\n                            columntype: 'dropdownlist'\n                        }]}\n                    >\n\n                    </JqxGrid>\n                </div>\n                </JqxTabs>\n                <div className=\"centerDiv\">\n\n                    <JqxButton style={{ marginTop: '5px' }} onClick={exportar}>Export to Excel</JqxButton>\n\n                    <JqxButton style={{ marginTop: '5px' }} onClick={subir}>Subir</JqxButton>\n\n                    <JqxButton style={{ marginTop: '5px' }}>\n                        <input onChange={cargar} name=\"excel\" type='file' />\n                    </JqxButton>\n\n                </div>\n            \n        </div>\n    )\n}\n\nexport default MyGrid;"]},"metadata":{},"sourceType":"module"}