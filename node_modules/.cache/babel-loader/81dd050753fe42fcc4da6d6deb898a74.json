{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport * as React from 'react';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const source = {\n      datafields: [{\n        name: 'firstname',\n        type: 'string'\n      }, {\n        name: 'lastname',\n        type: 'string'\n      }, {\n        name: 'productname',\n        type: 'string'\n      }],\n      datatype: 'array',\n      localdata: generatedata(200, false),\n      updaterow: (rowid, rowdata, commit) => {\n        // synchronize with the server - send update command\n        // call commit with parameter true if the synchronization with the server is successful \n        // and with parameter false if the synchronization failder.\n        commit(true);\n      }\n    };\n    const dataAdapter = new jqx.dataAdapter(source);\n    this.state = {\n      columns: [{\n        text: 'First Name',\n        columntype: 'textbox',\n        datafield: 'firstname',\n        width: 80\n      }, {\n        text: 'Last Name',\n        datafield: 'lastname',\n        columntype: 'textbox',\n        width: 80\n      }, {\n        text: 'Product',\n        columntype: 'dropdownlist',\n        datafield: 'productname',\n        width: 195\n      }, {\n        align: 'right',\n        cellsalign: 'right',\n        columntype: 'numberinput',\n        createeditor: (row, cellvalue, editor) => {\n          editor.jqxNumberInput({\n            decimalDigits: 0,\n            digits: 3\n          });\n        },\n        datafield: 'quantity',\n        text: 'Quantity',\n        width: 100\n      }, {\n        align: 'right',\n        cellsalign: 'right',\n        cellsformat: 'c2',\n        columntype: 'numberinput',\n        createeditor: (row, cellvalue, editor) => {\n          editor.jqxNumberInput({\n            digits: 3\n          });\n        },\n        datafield: 'price',\n        text: 'Price'\n      }],\n      source: dataAdapter\n    };\n  }\n\n  render() {\n    return React.createElement(JqxGrid // @ts-ignore\n    , {\n      width: \"1000px\",\n      source: this.state.source,\n      columns: this.state.columns,\n      editable: true,\n      selectionmode: 'multiplecellsadvanced',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","JqxGrid","jqx","generatedata","App","PureComponent","constructor","props","source","datafields","name","type","datatype","localdata","updaterow","rowid","rowdata","commit","dataAdapter","state","columns","text","columntype","datafield","width","align","cellsalign","createeditor","row","cellvalue","editor","jqxNumberInput","decimalDigits","digits","cellsformat","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\nclass App extends React.PureComponent<{}, IGridProps> {\n    constructor(props: {}) {\n        super(props);\n        const source: any = {\n            datafields: [\n                { name: 'firstname', type: 'string' },\n                { name: 'lastname', type: 'string' },\n                { name: 'productname', type: 'string' },\n            ],\n            datatype: 'array',\n            localdata: generatedata(200, false),\n            updaterow: (rowid: any, rowdata: any, commit: any): void => {\n                // synchronize with the server - send update command\n                // call commit with parameter true if the synchronization with the server is successful \n                // and with parameter false if the synchronization failder.\n                commit(true);\n            }\n        };\n        const dataAdapter: any = new jqx.dataAdapter(source);\n        this.state = {\n            columns: [\n                { text: 'First Name', columntype: 'textbox', datafield: 'firstname', width: 80 },\n                { text: 'Last Name', datafield: 'lastname', columntype: 'textbox', width: 80 },\n                { text: 'Product', columntype: 'dropdownlist', datafield: 'productname', width: 195 },\n                {\n                    align: 'right', cellsalign: 'right', columntype: 'numberinput',\n                    createeditor: (row: number, cellvalue: any, editor: any): void => {\n                        editor.jqxNumberInput({ decimalDigits: 0, digits: 3 });\n                    },\n                    datafield: 'quantity',\n                    text: 'Quantity',                     \n                    width: 100\n                },\n                {\n                    align: 'right', cellsalign: 'right', cellsformat: 'c2', columntype: 'numberinput',\n                    createeditor: (row: number, cellvalue: any, editor: any): void => {\n                        editor.jqxNumberInput({ digits: 3 });\n                    },\n                    datafield: 'price', \n                    text: 'Price'\n                                   \n                }\n            ],\n            source: dataAdapter\n        }\n    }\n    public render() {\n        return (\n            <JqxGrid\n                // @ts-ignore\n                width=\"1000px\" source={this.state.source} columns={this.state.columns}\n                editable={true} selectionmode={'multiplecellsadvanced'} />\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}