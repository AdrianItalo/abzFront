{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport * as React from 'react';\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.myGrid = React.createRef();\n    this.btnOnClick = this.btnOnClick.bind(this);\n    const source = {\n      datafields: [{\n        name: 'firstname',\n        type: 'string'\n      }, {\n        name: 'lastname',\n        type: 'string'\n      }],\n      datatype: 'array',\n      localdata: generatedata(10)\n    };\n    this.state = {\n      columns: [{\n        text: 'First Name',\n        datafield: 'firstname',\n        width: 120\n      }, {\n        text: 'Last Name',\n        datafield: 'lastname',\n        width: 120\n      }],\n      source: new jqx.dataAdapter(source)\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        fontSize: '13px',\n        fontFamily: 'Verdana',\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(JqxGrid, {\n      ref: this.myGrid // @ts-ignore\n      ,\n      source: this.state.source,\n      columns: this.state.columns,\n      sortable: true,\n      altrows: true,\n      autoheight: true,\n      selectionmode: 'multiplecellsadvanced',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(JqxButton, {\n      onClick: this.btnOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Print\"))));\n  }\n\n  btnOnClick() {\n    const gridContent = this.myGrid.current.exportdata('html');\n    const newWindow = window.open('', '', 'width=800, height=500');\n    const document = newWindow.document.open();\n    const pageContent = '<!DOCTYPE html>\\n' + '<html>\\n' + '<head>\\n' + '<meta charset=\"utf-8\" />\\n' + '<title>jQWidgets Grid</title>\\n' + '</head>\\n' + '<body>\\n' + gridContent + '\\n</body>\\n</html>';\n    document.write(pageContent);\n    document.close();\n    newWindow.print();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","JqxButton","JqxGrid","jqx","generatedata","App","PureComponent","constructor","props","myGrid","createRef","btnOnClick","bind","source","datafields","name","type","datatype","localdata","state","columns","text","datafield","width","dataAdapter","render","fontSize","fontFamily","float","marginTop","marginLeft","gridContent","current","exportdata","newWindow","window","open","document","pageContent","write","close","print"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\nclass App extends React.PureComponent<{}, IGridProps> {\n    private myGrid = React.createRef<JqxGrid>();\n    constructor(props: {}) {\n        super(props);\n        this.btnOnClick = this.btnOnClick.bind(this);\n        const source: any = {\n            datafields: [\n                { name: 'firstname', type: 'string' },\n                { name: 'lastname', type: 'string' },\n\n            ],\n            datatype: 'array',\n            localdata: generatedata(10)\n        };\n        this.state = {\n            columns: [\n                { text: 'First Name', datafield: 'firstname', width: 120 },\n                { text: 'Last Name', datafield: 'lastname', width: 120 },\n\n            ],\n            source: new jqx.dataAdapter(source)\n        }\n    }\n    public render() {\n        return (\n            <div style={{ fontSize: '13px', fontFamily: 'Verdana', float: 'left' }}>\n                <JqxGrid ref={this.myGrid}\n                    // @ts-ignore\n                    source={this.state.source} columns={this.state.columns}\n                    sortable={true} altrows={true} autoheight={true}\n                    selectionmode={'multiplecellsadvanced'} />\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ float: 'left', marginLeft: '10px' }}>\n                        <JqxButton onClick={this.btnOnClick}>Print</JqxButton>\n                    </div>                \n                </div>\n            </div>\n        );\n    }\n    private btnOnClick() {\n        const gridContent = this.myGrid.current!.exportdata('html');\n        const newWindow = window.open('', '', 'width=800, height=500');\n        const document = newWindow!.document.open();\n        const pageContent =\n            '<!DOCTYPE html>\\n' +\n            '<html>\\n' +\n            '<head>\\n' +\n            '<meta charset=\"utf-8\" />\\n' +\n            '<title>jQWidgets Grid</title>\\n' +\n            '</head>\\n' +\n            '<body>\\n' + gridContent + '\\n</body>\\n</html>';\n        document.write(pageContent);\n        document.close();\n        newWindow!.print();\n    };\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}