{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport * as React from 'react';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myGrid = React.createRef();\n    this.cantidad = React.useState;\n    this.excelBtnOnClick = this.excelBtnOnClick.bind(this);\n    const source = {\n      datafields: [{\n        name: 'firstname',\n        type: 'string'\n      }, {\n        name: 'productname',\n        type: 'string'\n      }],\n      datatype: 'array',\n      localdata: generatedata(100),\n      updaterow: (rowid, rowdata, commit) => {\n        // synchronize with the server - send update command\n        // call commit with parameter true if the synchronization with the server is successful \n        // and with parameter false if the synchronization failder.\n        commit(true);\n      }\n    };\n    const dataAdapter = new jqx.dataAdapter(source);\n    this.state = {\n      columns: [{\n        text: 'First Name',\n        columntype: 'textbox',\n        datafield: 'firstname',\n        width: 80\n      }, {\n        text: 'Product',\n        columntype: 'dropdownlist',\n        datafield: 'productname',\n        width: 195\n      }],\n      source: dataAdapter\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(JqxGrid, {\n      ref: this.myGrid // @ts-ignore\n      ,\n      width: \"300px\",\n      source: this.state.source,\n      columns: this.state.columns,\n      editable: true,\n      selectionmode: 'multiplecellsadvanced',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(JqxButton, {\n      onClick: this.excelBtnOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Export to Excel\")), React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(JqxButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Import   Excel\")));\n  }\n\n  excelBtnOnClick() {\n    this.myGrid.current.exportdata('xls', 'jqxGrid');\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","JqxGrid","jqx","generatedata","JqxButton","App","Component","constructor","props","myGrid","createRef","cantidad","useState","excelBtnOnClick","bind","source","datafields","name","type","datatype","localdata","updaterow","rowid","rowdata","commit","dataAdapter","state","columns","text","columntype","datafield","width","render","float","marginLeft","current","exportdata"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport Data from './data';\nclass App extends React.Component<{}, IGridProps> {\n\n    private myGrid = React.createRef<JqxGrid>();\n    private cantidad = React.useState;\n    \n    constructor(props: {}) {        \n        super(props);\n        this.excelBtnOnClick = this.excelBtnOnClick.bind(this);\n\n        \n        const source: any = {\n            datafields: [\n                { name: 'firstname', type: 'string' },\n                { name: 'productname', type: 'string' },\n            ],\n            datatype: 'array',\n            localdata: generatedata(100),\n            updaterow: (rowid: any, rowdata: any, commit: any): void => {\n                // synchronize with the server - send update command\n                // call commit with parameter true if the synchronization with the server is successful \n                // and with parameter false if the synchronization failder.\n                commit(true);\n            }\n        };\n        \n\n        const dataAdapter: any = new jqx.dataAdapter(source);\n        this.state = {\n            \n            columns: [\n                { text: 'First Name', columntype: 'textbox', datafield: 'firstname', width: 80 },\n\n                { text: 'Product', columntype: 'dropdownlist', datafield: 'productname', width: 195 },\n\n            ],\n            source: dataAdapter,           \n            \n        }\n\n        \n    }\n    public render() {\n        return (\n            <div>\n            <JqxGrid ref={this.myGrid}\n                // @ts-ignore\n                width=\"300px\" source={this.state.source} columns={this.state.columns}\n                editable={true} selectionmode={'multiplecellsadvanced'} />\n            <div style={{ float: 'left' }}>\n                <JqxButton onClick={this.excelBtnOnClick}>Export to Excel</JqxButton>\n            </div>\n            <div style={{ float: 'left', marginLeft: '10px' }}>\n                        <input type='file'/>\n                        <JqxButton >Import   Excel</JqxButton>\n\n\n            </div>\n\n            </div>\n        );\n    }\n    private excelBtnOnClick() {\n        this.myGrid.current!.exportdata('xls', 'jqxGrid');\n    };\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}