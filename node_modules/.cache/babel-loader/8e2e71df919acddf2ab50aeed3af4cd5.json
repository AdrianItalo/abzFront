{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport * as React from 'react';\nimport './App.css';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport JqxTabs from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtabs';\nimport { generatedata } from './generatedata';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const source2 = {\n      datafields: [{\n        name: 'Date'\n      }, {\n        name: 'S&P 500'\n      }, {\n        name: 'NASDAQ'\n      }],\n      datatype: 'csv',\n      url: 'nasdaq_vs_sp500.txt'\n    };\n    const source = {\n      datafields: [{\n        name: 'firstname',\n        type: 'string'\n      }, {\n        name: 'lastname',\n        type: 'string'\n      }],\n      datatype: 'array',\n      localdata: generatedata(100)\n    };\n    this.state = {\n      columns: [{\n        text: 'Date',\n        datafield: 'Date',\n        cellsformat: 'd',\n        width: 250\n      }, {\n        text: 'S&P 500',\n        datafield: 'S&P 500',\n        width: 150\n      }, {\n        text: 'NASDAQ',\n        datafield: 'NASDAQ'\n      }],\n      columns2: [{\n        text: 'First Name',\n        datafield: 'firstname',\n        width: 250\n      }, {\n        text: 'Last Name',\n        datafield: 'lastname',\n        width: 150\n      }],\n      source2: new jqx.dataAdapter(source2),\n      source: new jqx.dataAdapter(source)\n    };\n  }\n\n  render() {\n    return React.createElement(JqxTabs, {\n      width: 600,\n      height: 560,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Grid 1\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Grid 2\")), React.createElement(\"div\", {\n      style: {\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(JqxGrid, {\n      width: '100%',\n      height: '100%',\n      source: this.state.source2,\n      columns: this.state.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(JqxGrid, {\n      width: '100%',\n      height: '100%',\n      source: this.state.source,\n      columns: this.state.columns2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","JqxGrid","jqx","JqxTabs","generatedata","App","PureComponent","constructor","props","source2","datafields","name","datatype","url","source","type","localdata","state","columns","text","datafield","cellsformat","width","columns2","dataAdapter","render","marginLeft","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport './App.css';\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport JqxTabs from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtabs';\nimport { generatedata } from './generatedata'\nexport interface IState extends IGridProps {\n    source2: IGridProps['source'];\n    columns2: IGridProps['columns']\n}\nclass App extends React.PureComponent<{}, IState> {\n    constructor(props: {}) {\n        super(props);\n        const source2: any = {\n            datafields: [\n                { name: 'Date' },\n                { name: 'S&P 500' },\n                { name: 'NASDAQ' }\n            ],\n            datatype: 'csv',\n            url: 'nasdaq_vs_sp500.txt'\n        };\n        \n        const source: any = {\n            datafields: [\n                { name: 'firstname', type: 'string' },\n                { name: 'lastname', type: 'string' },\n\n            ],\n            datatype: 'array',\n            localdata: generatedata(100)\n        };\n        this.state = {\n            columns: [\n                { text: 'Date', datafield: 'Date', cellsformat: 'd', width: 250 },\n                { text: 'S&P 500', datafield: 'S&P 500', width: 150 },\n                { text: 'NASDAQ', datafield: 'NASDAQ' }\n            ],\n            columns2: [\n                { text: 'First Name', datafield: 'firstname', width: 250 },\n                { text: 'Last Name', datafield: 'lastname', width: 150 },\n\n            ],\n            source2: new jqx.dataAdapter(source2),\n            source: new jqx.dataAdapter(source)\n        }\n    }\n    public render() {\n        return (\n            <JqxTabs width={600} height={560}>\n                <ul>\n                    <li style={{ marginLeft: '30px' }}>Grid 1</li>\n                    <li>Grid 2</li>\n                </ul>\n                <div style={{ overflow: 'hidden' }}>\n                    <JqxGrid width={'100%'} height={'100%'} source={this.state.source2} columns={this.state.columns} />\n                </div>\n                <div style={{ overflow: 'hidden' }}>\n                    <JqxGrid width={'100%'} height={'100%'} source={this.state.source} columns={this.state.columns2} />\n                </div>\n            </JqxTabs>\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}