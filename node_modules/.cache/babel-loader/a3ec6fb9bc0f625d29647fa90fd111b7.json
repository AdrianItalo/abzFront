{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport * as React from 'react';\nimport { generatedata } from './generatedata';\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.myGrid = React.createRef();\n    this.excelBtnOnClick = this.excelBtnOnClick.bind(this);\n    this.pdfBtnOnClick = this.pdfBtnOnClick.bind(this);\n    const source = {\n      datafields: [{\n        name: 'firstname',\n        type: 'string'\n      }, {\n        name: 'lastname',\n        type: 'string'\n      }],\n      datatype: 'array',\n      localdata: generatedata(200, false) //GENERAMOS 100 DATOS, MEDIANTE ESTA FUNCION\n\n    };\n    this.state = {\n      columns: [{\n        text: 'First Name',\n        datafield: 'firstname',\n        width: 130\n      }, {\n        text: 'Last Name',\n        datafield: 'lastname',\n        width: 130\n      }],\n      source: new jqx.dataAdapter(source)\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        fontSize: '13px',\n        fontFamily: 'Verdana',\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(JqxGrid, {\n      theme: 'material-purple',\n      ref: this.myGrid // @ts-ignore\n      ,\n      width: '240px',\n      source: this.state.source,\n      columns: this.state.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(JqxButton, {\n      theme: 'material-purple',\n      onClick: this.excelBtnOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Export to Excel\")), React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(JqxButton, {\n      theme: 'material-purple',\n      onClick: this.pdfBtnOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Export to PDF\"))));\n  }\n\n  excelBtnOnClick() {\n    this.myGrid.current.exportdata('xls', 'jqxGrid');\n  }\n\n  pdfBtnOnClick() {\n    this.myGrid.current.exportdata('pdf', 'jqxGrid');\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","generatedata","JqxButton","JqxGrid","jqx","App","PureComponent","constructor","props","myGrid","createRef","excelBtnOnClick","bind","pdfBtnOnClick","source","datafields","name","type","datatype","localdata","state","columns","text","datafield","width","dataAdapter","render","fontSize","fontFamily","float","marginTop","marginLeft","current","exportdata"],"mappings":"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","sourcesContent":["import * as React from 'react';\n \n\n\nimport { generatedata } from './generatedata';\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\n\nclass App extends React.PureComponent<{}, IGridProps> {\n\n    private myGrid = React.createRef<JqxGrid>();\n    \n\n    constructor(props: {}) {\n        super(props);\n        this.excelBtnOnClick = this.excelBtnOnClick.bind(this);\n        this.pdfBtnOnClick = this.pdfBtnOnClick.bind(this);\n        \n        const source: any = {\n            datafields: [\n                { name: 'firstname', type: 'string' },\n                { name: 'lastname', type: 'string' },\n            ],\n            datatype: 'array',\n            localdata: generatedata(200, false)//GENERAMOS 100 DATOS, MEDIANTE ESTA FUNCION\n        };\n\n        this.state = {\n            columns: [\n                { text: 'First Name', datafield: 'firstname', width: 130 },\n                { text: 'Last Name', datafield: 'lastname', width: 130 },\n\n            ],\n            source: new jqx.dataAdapter(source)\n        }\n    }\n\n    public render() {\n        return (\n            <div style={{ fontSize: '13px', fontFamily: 'Verdana', float: 'left' }}>\n                <JqxGrid theme={'material-purple'} ref={this.myGrid}\n                    // @ts-ignore\n                    width={'240px'} source={this.state.source} columns={this.state.columns}                    \n                    \n                    />\n\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ float: 'left' }}>\n                        <JqxButton theme={'material-purple'} onClick={this.excelBtnOnClick}>Export to Excel</JqxButton>\n                        \n                    </div>\n                    <div style={{ float: 'left', marginLeft: '10px' }}>\n                        <JqxButton theme={'material-purple'} onClick={this.pdfBtnOnClick}>Export to PDF</JqxButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private excelBtnOnClick() {\n        this.myGrid.current!.exportdata('xls', 'jqxGrid');\n    };\n\n    private pdfBtnOnClick() {\n        this.myGrid.current!.exportdata('pdf', 'jqxGrid');\n    };\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}