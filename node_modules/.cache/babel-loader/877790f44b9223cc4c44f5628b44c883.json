{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport * as React from 'react';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const source = {\n      datafields: [{\n        name: 'firstname',\n        type: 'string'\n      }, {\n        name: 'lastname',\n        type: 'string'\n      }, {\n        name: 'productname',\n        type: 'string'\n      }],\n      datatype: 'array',\n      localdata: generatedata(200),\n      updaterow: (rowid, rowdata, commit) => {\n        // synchronize with the server - send update command\n        // call commit with parameter true if the synchronization with the server is successful \n        // and with parameter false if the synchronization failder.\n        commit(true);\n      }\n    };\n    const dataAdapter = new jqx.dataAdapter(source);\n    this.state = {\n      columns: [{\n        text: 'First Name',\n        columntype: 'textbox',\n        datafield: 'firstname',\n        width: 80\n      }, {\n        text: 'Last Name',\n        datafield: 'lastname',\n        columntype: 'textbox',\n        width: 80\n      }, {\n        text: 'Product',\n        columntype: 'dropdownlist',\n        datafield: 'productname',\n        width: 195\n      }],\n      source: dataAdapter\n    };\n  }\n\n  render() {\n    return React.createElement(JqxGrid // @ts-ignore\n    , {\n      width: \"480px\",\n      source: this.state.source,\n      columns: this.state.columns,\n      editable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","JqxGrid","jqx","generatedata","App","PureComponent","constructor","props","source","datafields","name","type","datatype","localdata","updaterow","rowid","rowdata","commit","dataAdapter","state","columns","text","columntype","datafield","width","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,OAAP,IAA8BC,GAA9B,QAAyC,+CAAzC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AACA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,aAAxB,CAAsD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,UAAMA,KAAN;AACA,UAAMC,MAAW,GAAG;AAChBC,MAAAA,UAAU,EAAE,CACR;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OADQ,EAER;AAAED,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAFQ,EAGR;AAAED,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,IAAI,EAAE;AAA7B,OAHQ,CADI;AAMhBC,MAAAA,QAAQ,EAAE,OANM;AAOhBC,MAAAA,SAAS,EAAEV,YAAY,CAAC,GAAD,CAPP;AAQhBW,MAAAA,SAAS,EAAE,CAACC,KAAD,EAAaC,OAAb,EAA2BC,MAA3B,KAAiD;AACxD;AACA;AACA;AACAA,QAAAA,MAAM,CAAC,IAAD,CAAN;AACH;AAbe,KAApB;AAeA,UAAMC,WAAgB,GAAG,IAAIhB,GAAG,CAACgB,WAAR,CAAoBV,MAApB,CAAzB;AACA,SAAKW,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,UAAU,EAAE,SAAlC;AAA6CC,QAAAA,SAAS,EAAE,WAAxD;AAAqEC,QAAAA,KAAK,EAAE;AAA5E,OADK,EAEL;AAAEH,QAAAA,IAAI,EAAE,WAAR;AAAqBE,QAAAA,SAAS,EAAE,UAAhC;AAA4CD,QAAAA,UAAU,EAAE,SAAxD;AAAmEE,QAAAA,KAAK,EAAE;AAA1E,OAFK,EAGL;AAAEH,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,UAAU,EAAE,cAA/B;AAA+CC,QAAAA,SAAS,EAAE,aAA1D;AAAyEC,QAAAA,KAAK,EAAE;AAAhF,OAHK,CADA;AAOThB,MAAAA,MAAM,EAAEU;AAPC,KAAb;AASH;;AACMO,EAAAA,MAAP,GAAgB;AACZ,WACI,oBAAC,OAAD,CACI;AADJ;AAEI,MAAA,KAAK,EAAC,OAFV;AAEkB,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWX,MAFrC;AAE6C,MAAA,OAAO,EAAE,KAAKW,KAAL,CAAWC,OAFjE;AAGI,MAAA,QAAQ,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AApCiD;;AAsCtD,eAAehB,GAAf","sourcesContent":["import * as React from 'react';\n\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport { generatedata } from './generatedata';\nclass App extends React.PureComponent<{}, IGridProps> {\n    constructor(props: {}) {\n        super(props);\n        const source: any = {\n            datafields: [\n                { name: 'firstname', type: 'string' },\n                { name: 'lastname', type: 'string' },\n                { name: 'productname', type: 'string' },\n            ],\n            datatype: 'array',\n            localdata: generatedata(200),\n            updaterow: (rowid: any, rowdata: any, commit: any): void => {\n                // synchronize with the server - send update command\n                // call commit with parameter true if the synchronization with the server is successful \n                // and with parameter false if the synchronization failder.\n                commit(true);\n            }\n        };\n        const dataAdapter: any = new jqx.dataAdapter(source);\n        this.state = {\n            columns: [\n                { text: 'First Name', columntype: 'textbox', datafield: 'firstname', width: 80 },\n                { text: 'Last Name', datafield: 'lastname', columntype: 'textbox', width: 80 },\n                { text: 'Product', columntype: 'dropdownlist', datafield: 'productname', width: 195 },\n\n            ],\n            source: dataAdapter\n        }\n    }\n    public render() {\n        return (\n            <JqxGrid\n                // @ts-ignore\n                width=\"480px\" source={this.state.source} columns={this.state.columns}\n                editable={true} />\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}