{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport * as React from 'react';\nimport { generatedata } from './generatedata';\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport JqxTabs from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtabs';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.myGrid = React.createRef();\n    this.excelBtnOnClick = this.excelBtnOnClick.bind(this);\n    const source = {\n      datafields: [{\n        name: 'firstname',\n        type: 'string'\n      }, {\n        name: 'lastname',\n        type: 'string'\n      }],\n      datatype: 'array',\n      localdata: generatedata(100)\n    };\n    this.state = {\n      columns: [{\n        text: 'First Name',\n        datafield: 'firstname',\n        width: 120\n      }, {\n        text: 'Last Name',\n        datafield: 'lastname',\n        width: 120\n      }],\n      source: new jqx.dataAdapter(source)\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(JqxTabs, {\n      width: 500,\n      height: 650,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Data\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Hidden\"))), React.createElement(\"div\", {\n      style: {\n        fontSize: '13px',\n        fontFamily: 'Verdana',\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(JqxGrid, {\n      ref: this.myGrid,\n      width: \"240px\",\n      source: this.state.source,\n      columns: this.state.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(JqxButton, {\n      onClick: this.excelBtnOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Export\")))));\n  }\n\n  excelBtnOnClick() {\n    this.myGrid.current.exportdata('xls', 'jqxGrid', true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","generatedata","JqxButton","JqxGrid","jqx","JqxTabs","App","PureComponent","constructor","props","myGrid","createRef","excelBtnOnClick","bind","source","datafields","name","type","datatype","localdata","state","columns","text","datafield","width","dataAdapter","render","marginLeft","fontSize","fontFamily","float","marginTop","current","exportdata"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {generatedata} from './generatedata'\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons';\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport JqxTabs from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxtabs';\n\nexport interface IState extends IGridProps {\n    source: IGridProps['source'];\n    columns: IGridProps['columns']\n}\nclass App extends React.PureComponent<{}, IState> {\n\n    private myGrid = React.createRef<JqxGrid>();\n\n    constructor(props: {}) {\n        super(props);\n        this.excelBtnOnClick = this.excelBtnOnClick.bind(this);\n\n        const source: any = {\n            datafields: [\n                { name: 'firstname', type: 'string' },\n                { name: 'lastname', type: 'string' },\n\n            ],\n            datatype: 'array',\n            localdata: generatedata(100)\n        };\n        this.state = {\n            columns: [\n                { text: 'First Name', datafield: 'firstname', width: 120 },\n                { text: 'Last Name', datafield: 'lastname', width: 120 },\n\n            ],\n            source: new jqx.dataAdapter(source)\n        }\n    }\n    public render() {\n        return (\n\n            <div>\n                <JqxTabs width={500} height={650} >\n                <ul>\n                    <li style={{ marginLeft: '30px' }}>Data</li>\n                    <li>Hidden</li>\n                </ul>\n                </JqxTabs>\n                 \n            \n            <div style={{ fontSize: '13px', fontFamily: 'Verdana', float: 'left' }}>\n\n               \n                \n                <JqxGrid ref={this.myGrid}\n                    width=\"240px\"\n                    source={this.state.source} columns={this.state.columns}\n\n                    />\n                \n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ float: 'left', marginLeft: '10px' }}>\n                        <JqxButton onClick={this.excelBtnOnClick}>Export</JqxButton>\n                    </div>                \n                </div>\n            </div>\n\n            </div>\n        );\n    }\n    private excelBtnOnClick() {\n        this.myGrid.current!.exportdata('xls', 'jqxGrid',true);\n    };\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}