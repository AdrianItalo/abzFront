{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/proyecto/my-app/src/App.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport JqxGrid from 'jqwidgets-react/react_jqxgrid.js';\n\nclass App extends React.Component {\n  render() {\n    let source = {\n      datatype: \"xml\",\n      datafields: [{\n        name: 'ProductName',\n        type: 'string'\n      }, {\n        name: 'QuantityPerUnit',\n        type: 'int'\n      }, {\n        name: 'UnitPrice',\n        type: 'float'\n      }, {\n        name: 'UnitsInStock',\n        type: 'float'\n      }, {\n        name: 'Discontinued',\n        type: 'bool'\n      }],\n      root: \"Products\",\n      record: \"Product\",\n      id: 'ProductID',\n      url: \"sampledata/products.xml\"\n    };\n\n    let cellsrenderer = (row, columnfield, value, defaulthtml, columnproperties, rowdata) => {\n      if (value < 20) {\n        return '<span style=\"margin: 4px; float: ' + columnproperties.cellsalign + '; color: #ff0000;\">' + value + '</span>';\n      } else {\n        return '<span style=\"margin: 4px; float: ' + columnproperties.cellsalign + '; color: #008000;\">' + value + '</span>';\n      }\n    };\n\n    let dataAdapter = new $.jqx.dataAdapter(source);\n    let columns = [{\n      text: 'Product Name',\n      columngroup: 'ProductDetails',\n      datafield: 'ProductName',\n      width: 250\n    }, {\n      text: 'Quantity per Unit',\n      columngroup: 'ProductDetails',\n      datafield: 'QuantityPerUnit',\n      cellsalign: 'right',\n      align: 'right',\n      width: 200\n    }, {\n      text: 'Unit Price',\n      columngroup: 'ProductDetails',\n      datafield: 'UnitPrice',\n      align: 'right',\n      cellsalign: 'right',\n      cellsformat: 'c2',\n      width: 200\n    }, {\n      text: 'Units In Stock',\n      datafield: 'UnitsInStock',\n      cellsalign: 'right',\n      cellsrenderer: cellsrenderer,\n      width: 100\n    }, {\n      text: 'Discontinued',\n      columntype: 'checkbox',\n      datafield: 'Discontinued'\n    }];\n    let columngroups = [{\n      text: 'Product Details',\n      align: 'center',\n      name: 'ProductDetails'\n    }];\n    return React.createElement(JqxGrid, {\n      width: 850,\n      source: dataAdapter,\n      pageable: true,\n      sortable: true,\n      altrows: true,\n      enabletooltips: true,\n      autoheight: true,\n      editable: true,\n      columns: columns,\n      selectionmode: 'multiplecellsadvanced',\n      columngroups: columngroups,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), document.getElementById('app'));","map":{"version":3,"sources":["/home/adrian/Escritorio/proyecto/my-app/src/App.tsx"],"names":["React","ReactDOM","JqxGrid","App","Component","render","source","datatype","datafields","name","type","root","record","id","url","cellsrenderer","row","columnfield","value","defaulthtml","columnproperties","rowdata","cellsalign","dataAdapter","$","jqx","columns","text","columngroup","datafield","width","align","cellsformat","columntype","columngroups","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport JqxGrid from 'jqwidgets-react/react_jqxgrid.js';\n \nclass App extends React.Component {\n  render () {\n    let source =\n    {\n        datatype: \"xml\",\n        datafields: [\n            { name: 'ProductName', type: 'string' },\n            { name: 'QuantityPerUnit', type: 'int' },\n            { name: 'UnitPrice', type: 'float' },\n            { name: 'UnitsInStock', type: 'float' },\n            { name: 'Discontinued', type: 'bool' }\n        ],\n        root: \"Products\",\n        record: \"Product\",\n        id: 'ProductID',\n        url: \"sampledata/products.xml\"\n    };\n \n    let cellsrenderer = (row, columnfield, value, defaulthtml, columnproperties, rowdata) => {\n        if (value < 20) {\n            return '<span style=\"margin: 4px; float: ' + columnproperties.cellsalign + '; color: #ff0000;\">' + value + '</span>';\n        }\n        else {\n            return '<span style=\"margin: 4px; float: ' + columnproperties.cellsalign + '; color: #008000;\">' + value + '</span>';\n        }\n    }\n \n    let dataAdapter = new $.jqx.dataAdapter(source);\n \n    let columns =\n    [\n      { text: 'Product Name', columngroup: 'ProductDetails', datafield: 'ProductName', width: 250 },\n      { text: 'Quantity per Unit', columngroup: 'ProductDetails', datafield: 'QuantityPerUnit', cellsalign: 'right', align: 'right', width: 200 },\n      { text: 'Unit Price', columngroup: 'ProductDetails', datafield: 'UnitPrice', align: 'right', cellsalign: 'right', cellsformat: 'c2', width: 200 },\n      { text: 'Units In Stock', datafield: 'UnitsInStock', cellsalign: 'right', cellsrenderer: cellsrenderer, width: 100 },\n      { text: 'Discontinued', columntype: 'checkbox', datafield: 'Discontinued' }\n    ];\n \n    let columngroups =\n    [\n        { text: 'Product Details', align: 'center', name: 'ProductDetails' }\n    ];\n \n    return (\n        <JqxGrid width={850} source={dataAdapter} pageable={true}\n             sortable={true} altrows={true} enabletooltips={true}\n             autoheight={true} editable={true} columns={columns}\n             selectionmode={'multiplecellsadvanced'} columngroups={columngroups} \n        />\n    )\n  }\n}\n \nReactDOM.render(<App />, document.getElementById('app'))"]},"metadata":{},"sourceType":"module"}