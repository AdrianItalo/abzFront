{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/abzFront/src/App.tsx\";\nimport JqxButton from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons\";\nimport JqxGrid, { jqx } from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid\";\nimport React from \"react\";\nimport { generateData } from \"./generatedata\";\n\nconst MyGrid = () => {\n  const myGrid = React.createRef();\n  const source = {\n    datafields: [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'productname',\n      type: 'string'\n    }],\n    datatype: 'array',\n    localdata: generateData(100)\n  };\n  const source2 = {\n    datafields: [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'productname',\n      type: 'string'\n    }],\n    url: './public/probando.csv',\n    datatype: 'xls'\n  };\n  console.log(source2);\n  const adapter = new jqx.dataAdapter(source);\n\n  const exportar = () => {\n    myGrid.current.exportdata('csv', 'archivo');\n  }; //console.log(source)\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(JqxGrid, {\n    ref: myGrid,\n    source: adapter,\n    selectionmode: 'multiplecellsadvanced',\n    editable: true,\n    columns: [{\n      text: \"First Name\",\n      datafield: \"name\",\n      width: \"250\"\n    }, {\n      text: \"Product Name\",\n      datafield: \"productname\",\n      width: \"250\",\n      columntype: 'dropdownlist'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      float: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(JqxButton, {\n    style: {\n      marginTop: '5px'\n    },\n    onClick: exportar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Export to Excel\")));\n};\n\nexport default MyGrid;","map":{"version":3,"sources":["/home/adrian/Escritorio/abzFront/src/App.tsx"],"names":["JqxButton","JqxGrid","jqx","React","generateData","MyGrid","myGrid","createRef","source","datafields","name","type","datatype","localdata","source2","url","console","log","adapter","dataAdapter","exportar","current","exportdata","text","datafield","width","columntype","float","marginTop"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,kDAAtB;AACA,OAAOC,OAAP,IAAkBC,GAAlB,QAA6B,+CAA7B;AACA,OAAOC,KAAP,MAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,MAAM,GAAGH,KAAK,CAACI,SAAN,EAAf;AAEA,QAAMC,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CACR;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAE;AAAtB,KADQ,EAER;AAAED,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,IAAI,EAAE;AAA7B,KAFQ,CADD;AAKXC,IAAAA,QAAQ,EAAE,OALC;AAMXC,IAAAA,SAAS,EAAET,YAAY,CAAC,GAAD;AANZ,GAAf;AAUA,QAAMU,OAAO,GAAG;AACZL,IAAAA,UAAU,EAAE,CACR;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAE;AAAtB,KADQ,EAER;AAAED,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,IAAI,EAAE;AAA7B,KAFQ,CADA;AAKZI,IAAAA,GAAG,EAAC,uBALQ;AAMZH,IAAAA,QAAQ,EAAC;AANG,GAAhB;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAKA,QAAMI,OAAO,GAAG,IAAIhB,GAAG,CAACiB,WAAR,CAAoBX,MAApB,CAAhB;;AAEA,QAAMY,QAAQ,GAAG,MAAM;AACnBd,IAAAA,MAAM,CAACe,OAAP,CAAgBC,UAAhB,CAA2B,KAA3B,EAAiC,SAAjC;AACH,GAFD,CA9BiB,CAkCjB;;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEhB,MAAd;AAEI,IAAA,MAAM,EAAEY,OAFZ;AAGI,IAAA,aAAa,EAAE,uBAHnB;AAII,IAAA,QAAQ,EAAE,IAJd;AAKI,IAAA,OAAO,EAAE,CAAC;AACNK,MAAAA,IAAI,EAAE,YADA;AAENC,MAAAA,SAAS,EAAE,MAFL;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAAD,EAMT;AACIF,MAAAA,IAAI,EAAE,cADV;AAEIC,MAAAA,SAAS,EAAE,aAFf;AAGIC,MAAAA,KAAK,EAAE,KAHX;AAIIC,MAAAA,UAAU,EAAE;AAJhB,KANS,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAsBI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAwC,IAAA,OAAO,EAAER,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,CAtBJ,CADJ;AA8BH,CArED;;AAuEA,eAAef,MAAf","sourcesContent":["import JqxButton from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxbuttons\";\nimport JqxGrid, { jqx } from \"jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid\";\nimport React, { useState } from \"react\";\nimport { generateData } from \"./generatedata\";\n\nconst MyGrid = () => {\n\n    const myGrid = React.createRef<JqxGrid>();\n\n    const source = {\n        datafields: [\n            { name: 'name', type: 'string' },\n            { name: 'productname', type: 'string' },\n        ],\n        datatype: 'array',\n        localdata: generateData(100)\n\n    };\n\n    const source2 = {\n        datafields: [\n            { name: 'name', type: 'string' },\n            { name: 'productname', type: 'string' },\n        ],\n        url:'./public/probando.csv',\n        datatype:'xls'\n    }\n\n    console.log(source2)\n\n\n\n    \n    const adapter = new jqx.dataAdapter(source);\n\n    const exportar = () => {\n        myGrid.current!.exportdata('csv','archivo')\n    }\n    \n    //console.log(source)\n\n\n\n\n    return(\n        <div>\n            <JqxGrid ref={myGrid}\n\n                source={adapter}\n                selectionmode={'multiplecellsadvanced'}\n                editable={true}\n                columns={[{\n                    text: \"First Name\",\n                    datafield: \"name\",\n                    width: \"250\",\n                    \n                },\n                {\n                    text: \"Product Name\",\n                    datafield: \"productname\",\n                    width: \"250\",\n                    columntype: 'dropdownlist'\n                }]}\n                \n\n            >\n            </JqxGrid>\n            <div style={{ float: 'left' }}>\n\n            <JqxButton style={{ marginTop: '5px' }} onClick={exportar}>Export to Excel</JqxButton>\n\n            </div>\n        </div>\n    )\n}\n\nexport default MyGrid;"]},"metadata":{},"sourceType":"module"}